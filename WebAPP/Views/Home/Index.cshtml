@using System.Security.Claims
@{
    string rol = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value!;
}
@model IEnumerable<project_DBA_VISO.Models.Views.ProductViewModel>
@{
    ViewData["Title"] = "Inicio";
}

<div class="content">
    @if(rol == "Administrador")
    {
        <div class="row">
            <div class="col-lg-3 col-sm-6 col-12">
                <div class="dash-widget">
                    <div class="dash-widgetimg">
                        <span><img src="~/img/icons/dash1.svg" alt="img"></span>
                    </div>
                    <div class="dash-widgetcontent">
                        <h5>C$<span class="counters" data-count="0.00">C$0.00</span></h5>
                        <h6>Compras Quincenales</h6>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-sm-6 col-12">
                <div class="dash-widget dash1">
                    <div class="dash-widgetimg">
                        <span><img src="~/img/icons/dash2.svg" alt="img"></span>
                    </div>
                    <div class="dash-widgetcontent">
                        <h5>C$<span class="counters" data-count="0.00">C$0.00</span></h5>
                        <h6>Ventas Quincenales</h6>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-sm-6 col-12">
                <div class="dash-widget dash2">
                    <div class="dash-widgetimg">
                        <span><img src="~/img/icons/dash3.svg" alt="img"></span>
                    </div>
                    <div class="dash-widgetcontent">
                        <h5>C$<span class="counters" data-count="0.00">C$0.00</span></h5>
                        <h6>Perdidas Quincenales</h6>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-sm-6 col-12">
                <div class="dash-widget dash3">
                    <div class="dash-widgetimg">
                        <span><img src="~/img/icons/dash4.svg" alt="img"></span>
                    </div>
                    <div class="dash-widgetcontent">
                        <h5>C$<span class="counters" data-count="0.00">C$0.00</span></h5>
                        <h6>Ganancias Quincenales</h6>
                    </div>
                </div>
            </div>


            <div class="col-lg-3 col-sm-6 col-12 d-flex">
                <div class="dash-count">
                    <div class="dash-counts">
                        <h4>0</h4>
                        <h5>Clientes</h5>
                    </div>
                    <div class="dash-imgs">
                        <i data-feather="user"></i>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-sm-6 col-12 d-flex">
                <div class="dash-count das1">
                    <div class="dash-counts">
                        <h4>0</h4>
                        <h5>Proveedores</h5>
                    </div>
                    <div class="dash-imgs">
                        <i data-feather="user-check"></i>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-sm-6 col-12 d-flex">
                <div class="dash-count das2">
                    <div class="dash-counts">
                        <h4>0</h4>
                        <h5>Factura de compras</h5>
                    </div>
                    <div class="dash-imgs">
                        <i data-feather="file-text"></i>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-sm-6 col-12 d-flex">
                <div class="dash-count das3">
                    <div class="dash-counts">
                        <h4>0</h4>
                        <h5>Factura de ventas</h5>
                    </div>
                    <div class="dash-imgs">
                        <i data-feather="file"></i>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <!--Graphic-->
            <div class="col-lg-7 col-sm-12 col-12 d-flex">
                <div class="card flex-fill">
                    <div class="card-header pb-0 d-flex justify-content-between align-items-center">
                        <h5 class="card-title">Compra y Venta</h5>
                    </div>
                    <div class="card-body">
                        <!--<div id="s-line-area" class="chart-set"></div>-->
                    </div>
                </div>
            </div>
            <div class="col-lg-5 col-sm-12 col-12 d-flex">
                <div class="card flex-fill">
                    <div class="card-header pb-0 d-flex justify-content-between align-items-center">
                        <h4 class="card-title mb-0">Productos agregados recientemente</h4>
                        <div class="dropdown">
                            <a href="javascript:void(0);" data-bs-toggle="dropdown" aria-expanded="false"
                               class="dropset">
                                <i class="fa fa-ellipsis-v"></i>
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                <li>
                                    <a class="dropdown-item" asp-controller="Product" asp-action="Productlist">Lista de Productos</a>
                                </li>
                                <li>
                                    <a class="dropdown-item" asp-controller="Product" asp-action="Addproduct">Nuevo Producto</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive dataview">
                            <!--Cambio de mayor a menor-->
                            @if (Model.Count() < 0)
                            {
                                <table class="table datatable ">
                                    <thead>
                                        <tr>
                                            <th>Código</th>
                                            <th>Descripción</th>
                                            <th>Precio</th>
                                            <th>Categoría</th>
                                            <th>Marca</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model)
                                        {
                                            <tr>
                                                <td>@Html.DisplayFor(m => item.Producto_Id)</td>
                                                <td class="productimgname">
                                                    @if (!string.IsNullOrEmpty(item.Image))
                                                    {
                                                        <a asp-controller="Product" asp-action="Productlist" class="product-img">
                                                            <img src="@item.Image" alt="product">
                                                        </a>
                                                    }
                                                    <a asp-controller="Product" asp-action="Productlist">@Html.DisplayFor(m => item.Descripcion)</a>
                                                </td>
                                                <td>@Html.DisplayFor(m => item.Precio)</td>
                                                <td>@Html.DisplayFor(m => item.CategoriaNombre)</td>
                                                <td>@Html.DisplayFor(m => item.MarcaNombre)</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                            else
                            {
                                <p class="text-center">No hay Registros</p>
                            }
                        </div>
                    </div>

                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-lg-3 col-sm-6 col-12 d-flex">
                <div class="dash-count">
                    <div class="dash-counts">
                        <h4>@ViewBag.TotalVentas</h4>
                        <h5>Ventas del Día</h5>
                    </div>
                    <div class="dash-imgs">
                        <i data-feather="shopping-cart"></i>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-sm-6 col-12 d-flex">
                <div class="dash-count das1">
                    <div class="dash-counts das1">
                        <h4>@ViewBag.ProductosVendidos</h4>
                        <h5>Productos Vendidos</h5>
                    </div>
                    <div class="dash-imgs">
                        <i data-feather="shopping-bag"></i>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-sm-6 col-12 d-flex">
                <div class="dash-count das2">
                    <div class="dash-counts">
                        <h4>@ViewBag.ProductosStockBajo</h4>
                        <h5>Productos con Bajo Stock</h5>
                    </div>
                    <div class="dash-imgs">
                        <i data-feather="box"></i>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-sm-6 col-12 d-flex">
                <div class="dash-count das3">
                    <div class="dash-counts">
                        <h4>@ViewBag.ClientesAtendidos</h4>
                        <h5>Clientes Atendidos</h5>
                    </div>
                    <div class="dash-imgs">
                        <i data-feather="users"></i>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="row">
            <div class="col-lg-6 col-sm-12 col-12 d-flex">
                <div class="card flex-fill">
                    <div class="card-header">
                        <h5 class="card-title">Productos más vendidos hoy</h5>
                    </div>
                    <div class="card-body d-flex justify-content-center">
                        <div id="donut-chart" class="chart-set"></div>
                    </div>
                </div>
            </div>

            <div class="col-lg-6 col-sm-12 col-12 d-flex">
                <div class="card flex-fill">
                    <div class="card-header pb-0 d-flex justify-content-between align-items-center">
                        <h4 class="card-title mb-0">Productos agregados recientemente</h4>
                        <div class="dropdown">
                            <a href="javascript:void(0);" data-bs-toggle="dropdown" aria-expanded="false"
                               class="dropset">
                                <i class="fa fa-ellipsis-v"></i>
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                <li>
                                    <a class="dropdown-item" asp-controller="Product" asp-action="Productlist">Lista de Productos</a>
                                </li>
                                <li>
                                    <a class="dropdown-item" asp-controller="Product" asp-action="Addproduct">Nuevo Producto</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive dataview">
                            @if (Model.Count() > 0)
                            {
                                <table class="table datatable ">
                                    <thead>
                                        <tr>
                                            <th>Código</th>
                                            <th>Descripción</th>
                                            <th>Precio</th>
                                            <th>Categoría</th>
                                            <th>Marca</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model)
                                        {
                                            <tr>
                                                <td>@Html.DisplayFor(m => item.Producto_Id)</td>
                                                <td class="productimgname">
                                                    @if (!string.IsNullOrEmpty(item.Image))
                                                    {
                                                        <a asp-controller="Product" asp-action="Productlist" class="product-img">
                                                            <img src="@item.Image" alt="product">
                                                        </a>
                                                    }
                                                    <a asp-controller="Product" asp-action="Productlist">@Html.DisplayFor(m => item.Descripcion)</a>
                                                </td>
                                                <td>@Html.DisplayFor(m => item.Precio)</td>
                                                <td>@Html.DisplayFor(m => item.CategoriaNombre)</td>
                                                <td>@Html.DisplayFor(m => item.MarcaNombre)</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                            else
                            {
                                <p class="text-center">No hay Registros</p>
                            }
                        </div>
                    </div>

                </div>
            </div>
        </div>
    }



</div>

@section scripts {
    <script>
        $(function () {
            'use strict';

            // Obtener datos desde ViewBag
            var comprasData = @Html.Raw(Json.Serialize(ViewBag.Compras));
            var ventasData = @Html.Raw(Json.Serialize(ViewBag.Ventas));

            // Verifica si $values está presente en los datos
            var compras = comprasData.$values || comprasData;
            var ventas = ventasData.$values || ventasData;


            function parseDate(dateString) {
                return new Date(dateString.replace(' ', 'T') + 'Z');
            }

            function isValidDate(d) {
                return d instanceof Date && !isNaN(d);
            }

            var fechas = compras.map(c => parseDate(c.fecha))
                .concat(ventas.map(v => parseDate(v.fecha)))
                .filter(isValidDate)
                .sort((a, b) => a - b)
                .map(f => f.toISOString());

            fechas = [...new Set(fechas)];

            var comprasMap = new Map(compras.map(c => {
                let fecha = parseDate(c.fecha);
                return isValidDate(fecha) ? [fecha.toISOString(), c.totalCompras] : null;
            }).filter(item => item !== null));

            var ventasMap = new Map(ventas.map(v => {
                let fecha = parseDate(v.fecha);
                return isValidDate(fecha) ? [fecha.toISOString(), v.totalVentas] : null;
            }).filter(item => item !== null));

            var comprasSeries = fechas.map(f => comprasMap.get(f) || 0);
            var ventasSeries = fechas.map(f => ventasMap.get(f) || 0);

            var lightOptions = {
                series: [{
                    name: 'Compras',
                    data: comprasSeries
                }, {
                    name: 'Ventas',
                    data: ventasSeries
                }],
                chart: {
                    height: 350,
                    type: 'area',
                    foreColor: '#000',
                    toolbar: {
                        show: false
                    },
                    background: '#fff'
                },
                dataLabels: {
                    enabled: false
                },
                stroke: {
                    curve: 'smooth'
                },
                xaxis: {
                    type: 'datetime',
                    categories: fechas,
                    labels: {
                        style: {
                            colors: '#000'
                        }
                    }
                },
                yaxis: {
                    labels: {
                        style: {
                            colors: '#000'
                        }
                    }
                },
                tooltip: {
                    theme: 'light'
                },
                grid: {
                    borderColor: '#565656'
                },
                legend: {
                    labels: {
                        colors: '#000'
                    }
                }
            };


            var darkOptions = {
                series: [{
                    name: 'Compras',
                    data: comprasSeries
                }, {
                    name: 'Ventas',
                    data: ventasSeries
                }],
                chart: {
                    height: 350,
                    type: 'area',
                    foreColor: '#fff',
                    toolbar: {
                        show: false
                    },
                    background: '#1d1d42'
                },
                dataLabels: {
                    enabled: false
                },
                stroke: {
                    curve: 'smooth'
                },
                xaxis: {
                    type: 'datetime',
                    categories: fechas,
                    labels: {
                        style: {
                            colors: '#fff'
                        }
                    }
                },
                yaxis: {
                    labels: {
                        style: {
                            colors: '#fff'
                        }
                    }
                },
                tooltip: {
                    theme: 'dark'
                },
                grid: {
                    borderColor: '#565656'
                },
                legend: {
                    labels: {
                        colors: '#fff'
                    }
                }
            };

            var chart = new ApexCharts(document.querySelector("#s-line-area"), lightOptions);
            chart.render();

            function updateChartTheme() {
                var theme = document.body.getAttribute('data-theme');
                if (theme === 'dark') {
                    chart.updateOptions(darkOptions);
                } else {
                    chart.updateOptions(lightOptions);
                }
            }

            var observer = new MutationObserver(function (mutations) {
                mutations.forEach(function (mutation) {
                    if (mutation.attributeName === 'data-theme') {
                        updateChartTheme();
                    }
                });
            });

            observer.observe(document.body, { attributes: true });

            updateChartTheme();
        });
    </script>
    <script>
        var topProductosData = @Html.Raw(Json.Serialize(ViewBag.TopProductos));
        var topProductos = topProductosData.$values || topProductosData;

        var lightOptions = {
            series: topProductos.map(x => x.cantidadVendida),
            chart: {
                width: '180%',  // Ajusta dinámicamente al contenedor
                type: 'pie',
            },
            labels: topProductos.map(x => x.producto),
            legend: {
                labels: {
                    colors: '#000000'
                }
            },
            responsive: [
                {
                    breakpoint: 1200,
                    options: {
                        chart: {
                            width: '80%'  // Ajusta el tamaño del gráfico
                        },
                        legend: {
                            position: 'right'
                        }
                    }
                },
                {
                    breakpoint: 992,
                    options: {
                        chart: {
                            width: '70%'  // Ajusta el tamaño del gráfico
                        },
                        legend: {
                            position: 'right'
                        }
                    }
                },
                {
                    breakpoint: 768,
                    options: {
                        chart: {
                            width: '60%'  // Ajusta el tamaño del gráfico
                        },
                        legend: {
                            position: 'bottom'
                        }
                    }
                },
                {
                    breakpoint: 576,
                    options: {
                        chart: {
                            width: '100%'  // Ajusta el tamaño del gráfico
                        },
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            ]
        };

        var darkOptions = {
            series: topProductos.map(x => x.cantidadVendida),
            chart: {
                width: '180%',  // Ajusta dinámicamente al contenedor
                type: 'pie',
            },
            labels: topProductos.map(x => x.producto),
            legend: {
                labels: {
                    colors: '#FFFFFF'
                }
            },
            responsive: [
                {
                    breakpoint: 1200,
                    options: {
                        chart: {
                            width: '80%'  // Ajusta el tamaño del gráfico
                        },
                        legend: {
                            position: 'right'
                        }
                    }
                },
                {
                    breakpoint: 992,
                    options: {
                        chart: {
                            width: '70%'  // Ajusta el tamaño del gráfico
                        },
                        legend: {
                            position: 'right'
                        }
                    }
                },
                {
                    breakpoint: 768,
                    options: {
                        chart: {
                            width: '60%'  // Ajusta el tamaño del gráfico
                        },
                        legend: {
                            position: 'bottom'
                        }
                    }
                },
                {
                    breakpoint: 576,
                    options: {
                        chart: {
                            width: '100%'  // Ajusta el tamaño del gráfico
                        },
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            ]
        };

        var chart = new ApexCharts(document.querySelector("#donut-chart"), lightOptions);
        chart.render();

        function updateChartTheme() {
            var theme = document.body.getAttribute('data-theme');
            if (theme === 'dark') {
                chart.updateOptions(darkOptions);
            } else {
                chart.updateOptions(lightOptions);
            }
        }

        var observer = new MutationObserver(function (mutations) {
            mutations.forEach(function (mutation) {
                if (mutation.attributeName === 'data-theme') {
                    updateChartTheme();
                }
            });
        });

        observer.observe(document.body, { attributes: true });

        updateChartTheme();
    </script>
}

<!---->