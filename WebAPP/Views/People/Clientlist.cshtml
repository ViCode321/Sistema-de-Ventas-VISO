@using System.Security.Claims
@{
    string rol = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value;
}
@model IEnumerable<project_DBA_VISO.Models.Client>
@{
    ViewData["Title"] = "lista de clientes";
}
<div class="content">
    <div class="page-header">
        <div class="page-title">
            <h4>Lista de clientes</h4>
        </div>
        <div class="page-btn">
            <a asp-controller="People" asp-action="Addclient" class="btn btn-added">
                <img src="~/img/icons/plus.svg" alt="img">Nuevo
                Cliente
            </a>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="table-top">
                <div class="search-set">
                    <div class="search-input">
                        <a class="btn btn-searchset"><img src="~/img/icons/search-white.svg" alt="img"></a>
                    </div>
                </div>
                <div class="wordset">
                    @if (rol == "Administrador")
                    {
                    <ul>
                        <li>
                            <a href="/People/ExportClientsToPdf" data-bs-toggle="tooltip" data-bs-placement="top" title="pdf">
                                <img src="~/img/icons/pdf.svg" alt="img">
                            </a>
                        </li>
                        <li>
                            <a id="exportExcel" data-bs-toggle="tooltip" data-bs-placement="top" title="excel">
                                <img src="~/img/icons/excel.svg" alt="img">
                            </a>
                        </li>
                    </ul>
                    }
                </div>
            </div>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="table-responsive">
                    <!--Cambio de mayor a menor-->
                    @if (Model.Count() < 0)
                    {
                    <table id="tabla" class="table  datanew">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(c => c.Cliente_Id)</th>
                                <th>@Html.DisplayNameFor(c => c.Nombre)</th>
                                <th>@Html.DisplayNameFor(c => c.Apellido)</th>
                                <th>@Html.DisplayNameFor(c => c.Status)</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(m => item.Cliente_Id)</td>
                                    <td>@Html.DisplayFor(m => item.Nombre)</td>
                                    <td>@Html.DisplayFor(m => item.Apellido)</td>
                                    @if (item.Status)
                                    {
                                        <td>
                                            <span class="badges bg-lightgreen">Activo</span>
                                        </td>
                                        <td>
                                            <a class="confirm-text delete-client" data-client-id="@item.Cliente_Id">
                                                <img src="~/img/icons/delete.svg" alt="img">
                                            </a>
                                        </td>
                                    }
                                    else
                                    {
                                        <td>
                                            <span class="badges bg-lightred">Inactivo</span>
                                        </td>
                                        <td>
                                            <a class="confirm-text activate-client" data-client-id="@item.Cliente_Id">
                                                <i class="fa fa-check"></i>
                                            </a>
                                        </td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                    }
                    else
                    {
                        <p class="text-center">No hay Registros</p>
                    }
                </div>
            }
        </div>
    </div>

</div>

@section scripts {
    <script>
        $(document).ready(function () {

            var tabla = $('#tabla').DataTable();

            $(document).on("click", ".delete-client", function () {
                var clientId = $(this).data("client-id");
                var currentPage = tabla.page(); // Guardar la página actual
                Swal.fire({
                    title: "¿Estás seguro?",
                    text: "¿Quieres desactivar el estado cliente?",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Sí",
                    cancelButtonText: "Cancelar"
                }).then((result) => {
                    if (result.isConfirmed) {
                        eliminarCliente(clientId, '/People/DeleteConfirmedClient', currentPage);
                    }
                });
            });

            $(document).on("click", ".activate-client", function () {
                var clientId = $(this).data("client-id");
                var currentPage = tabla.page(); // Guardar la página actual
                Swal.fire({
                    title: "¿Estás seguro?",
                    text: "¿Quieres activar el estado del cliente?",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Sí",
                    cancelButtonText: "Cancelar"
                }).then((result) => {
                    if (result.isConfirmed) {
                        eliminarCliente(clientId, '/People/ActivateConfirmedClient', currentPage);
                    }
                });
            });

            function actualizarFormulario(data) {
                // Limpia los datos existentes
                tabla.clear();

                $.each(data.$values, function (i, item) {
                    var deleteIcon = '<a class="confirm-text delete-client" data-client-id=' + item.cliente_Id + '><img src="/img/icons/delete.svg" alt="img"></a>';

                    var statusCell = '';
                    var actionCell = '';
                    if (item.status) {
                        statusCell = '<td><span class="badges bg-lightgreen">Activo</span></td>';
                        actionCell = '<td>' + deleteIcon + '</td>';
                    } else {
                        statusCell = '<td><span class="badges bg-lightred">Inactivo</span></td>';
                        actionCell = '<td><a class="confirm-text activate-client" data-client-id="' + item.cliente_Id + '"><i class="fa fa-check"></i></a></td>';
                    }

                    var row = [
                        item.cliente_Id,
                        item.nombre,
                        item.apellido,
                        statusCell,
                        actionCell
                    ];

                    // Añade la fila a DataTables en lugar de directamente al cuerpo de la tabla
                    tabla.row.add(row);
                });

                // Dibuja la tabla con los nuevos datos
                tabla.draw(false);
            }


            function eliminarCliente(clientId, url, currentPage) {
                var token = $('input[name="__RequestVerificationToken"]').val();
                $.ajax({
                    url: url,
                    type: 'POST',
                    data: {
                        id: clientId,
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: "¡Acción exitosa!",
                                text: response.message,
                                icon: "success",
                                confirmButtonColor: "#3085d6",
                                confirmButtonText: "Ok",
                            }).then((result) => {
                                // Aquí es donde haces la nueva solicitud AJAX para obtener los datos actualizados
                                $.ajax({
                                    url: '/People/ClientlistJson',
                                    type: 'GET',
                                    success: function (updatedData) {
                                        actualizarFormulario(updatedData);
                                        tabla.page(currentPage).draw('page'); // Restaurar la página actual
                                    }
                                });
                            });
                        }
                        else {
                            Swal.fire({
                                title: "Error",
                                text: response.message,
                                icon: "error",
                                confirmButtonColor: "#d33",
                                confirmButtonText: "OK"
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error:', error, clientId);
                    }
                });
            }
        });

        //para exel
        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("exportExcel").addEventListener("click", function () {
                window.location.href = '/People/ExportClientsToExcel';
            });
        });
    </script>
}
