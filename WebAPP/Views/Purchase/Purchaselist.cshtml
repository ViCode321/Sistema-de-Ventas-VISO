@using System.Security.Claims
@{
    string rol = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value;
}

@model IEnumerable<project_DBA_VISO.Models.Purchase_Detail>
@{
    ViewData["Title"] = "Gastos";
}

<div class="content">
    <div class="page-header">
        <div class="page-title">
            <h4>Lista de gastos</h4>
        </div>
        <div class="page-btn">
            <a class="btn btn-added" asp-controller="Purchase" asp-action="Newpurchase">
                <img src="~/img/icons/plus.svg" class="me-2"
                     alt="img">Nueva compra
            </a>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="table-top">
                <div class="search-set">
                    <div class="search-input">
                        <a class="btn btn-searchset"><img src="~/img/icons/search-white.svg" alt="img"></a>
                    </div>
                </div>
                <div class="wordset">
                    @if (rol == "Administrador")
                    {
                    <ul>
                        <li>
                            <a href="/Purchase/ExportToPdf" data-bs-toggle="tooltip" data-bs-placement="top" title="pdf">
                                <img src="~/img/icons/pdf.svg" alt="img">
                            </a>
                        </li>
                        <li>
                            <a id="exportExcel" data-bs-toggle="tooltip" data-bs-placement="top" title="excel">
                                <img src="~/img/icons/excel.svg" alt="img">
                            </a>
                        </li>
                    </ul>
                   }
                </div>
            </div>            
            <input type="hidden" name="userRole" value="@rol" />

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="table-responsive">
                    @if (Model.Count() < 0)
                    {
                    <table id="tabla" class="table  datanew">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(d => d.DetalleCompra_Id)</th>
                                <th>@Html.DisplayNameFor(pd => pd.Producto_Id)</th>
                                <th>@Html.DisplayNameFor(c => c.Cantidad)</th>
                                <th>@Html.DisplayNameFor(pr => pr.Precio_Unitario)</th>
                                <th>@Html.DisplayNameFor(t => t.Total)</th>
                                <th>@Html.DisplayNameFor(f => f.Purchases!.Fecha)</th>
                                <th>@Html.DisplayNameFor(po => po.Proveedor_Id)</th>
                                @if (rol == "Administrador")
                                {
                                    <th>Acción</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(i => item.DetalleCompra_Id)</td>
                                    <td>@Html.DisplayFor(i => item.Products!.Descripcion)</td>
                                    <td>@Html.DisplayFor(i => item.Cantidad)</td>
                                    <td>@Html.DisplayFor(i => item.Precio_Unitario)</td>
                                    <td>@Html.DisplayFor(i => item.Total)</td>
                                    <td>@Html.DisplayFor(i => item.Purchases!.Fecha)</td>
                                    <td>@Html.DisplayFor(i => item.Suppliers!.Nombre)</td>
                                    @if (rol == "Administrador")
                                    {
                                    <td>
                                            <!--<a class="me-3" asp-action="Editpurchase" asp-route-id="item.Compra_Id">
                                                <img src="~/img/icons/edit.svg" alt="img">
                                            </a>-->
                                            <a class="me-3 confirm-text delete-purchase" data-purchase-id="@item.DetalleCompra_Id">
                                                <img src="~/img/icons/delete.svg" alt="img">
                                            </a>
                                    </td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                    }
                    else
                    {
                        <p class="text-center">No hay Registros</p>
                    }
                </div>
            }
        </div>
    </div>

</div>
@section scripts {
    <script>
        function formatDate(dateString) {
            var date = new Date(dateString);
            var dateOptions = { month: 'numeric', day: 'numeric', year: 'numeric' };
            var timeOptions = { hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: true };
            var formattedDate = date.toLocaleString('en-US', dateOptions);
            var formattedTime = date.toLocaleString('en-US', timeOptions);
            return formattedDate + ' ' + formattedTime;
        }

        $(document).ready(function () {
            var tabla = $('#tabla').DataTable();
            var userRole = '@rol';
            
            $(document).on("click", ".delete-purchase", function () {
                var purchaseId = $(this).data("purchase-id");
                var currentPage = tabla.page();
                Swal.fire({
                    title: "¿Estás seguro?",
                    text: "¡No podrás revertir esto!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Sí, anularlo",
                    cancelButtonText: "Cancelar"
                }).then((result) => {
                    if (result.isConfirmed) {
                        eliminarCompra(purchaseId, currentPage);
                    }
                });
            });

            function actualizarFormulario(data) {
                tabla.clear();

                $.each(data.$values, function (i, item) {
                    //var editIcon = '<a class="me-3" href="/Purchase/Editpurchase/' + item.compra_Id + '"><img src="/img/icons/edit.svg" alt="img"></a>';
                    var deleteIcon = '<a class="me-3 confirm-text delete-purchase" data-purchase-id="' + item.detalleCompra_Id + '"><img src="/img/icons/delete.svg" alt="img"></a>';

                    var actionCell = '';
                    if (userRole == 'Administrador') {
                        actionCell = '<td>' + deleteIcon + '</td>';
                    }
                    else {
                        actionCell = '<td></td>';
                    }
                    var row = [
                        item.detalleCompra_Id,
                        item.producto_Descripcion,
                        item.cantidad,
                        item.precio_Unitario,
                        item.total,
                        formatDate(item.fecha), 
                        item.proveedor_Nombre,
                        actionCell
                    ];
                    tabla.row.add(row);
                });

                // Dibuja la tabla con los nuevos datos
                tabla.draw(false);
            }

            function eliminarCompra(purchaseId, currentPage) {
                var token = $('input[name="__RequestVerificationToken"]').val();
                $.ajax({
                    url: '/Purchase/DeleteConfirmed',
                    type: 'POST',
                    data: {
                        id: purchaseId,
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: "¡Acción exitosa!",
                                text: response.message,
                                icon: "success",
                                confirmButtonColor: "#3085d6",
                                confirmButtonText: "Ok",
                            }).then((result) => {
                                $.ajax({
                                    url: '/Purchase/PurchaselistJson',
                                    type: 'GET',
                                    success: function (updatedData) {
                                        actualizarFormulario(updatedData);
                                        tabla.page(currentPage).draw('page');
                                    }
                                });
                            });
                        }
                        else {
                            Swal.fire({
                                title: "Error",
                                text: response.message,
                                icon: "error",
                                confirmButtonColor: "#d33",
                                confirmButtonText: "OK"
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log(xhr, status, error);
                    }
                });
            }
        });
        //para exel
        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("exportExcel").addEventListener("click", function () {
                window.location.href = '/Purchase/ExportToExcel';
            });
        });
    </script>

}
