@using System.Security.Claims
@{
    string rol = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value;
}
@model IEnumerable<project_DBA_VISO.Models.Invoice_Detail>
@{
    ViewData["Title"] = "Editar venta";
}

<div class="content">
    <div class="page-header">
        <div class="page-title">
            <h4>Editar venta</h4>
            <div>
                Número de Factura
                <strong>@ViewBag.Factura_Id</strong>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="row">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @if (Model.Count() > 0)
                    {
                        <div class="table-responsive mb-3">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>@Html.DisplayNameFor(m => m.Factura_Id)</th>
                                        <th>@Html.DisplayNameFor(m => m.Producto_Id)</th>
                                        <th>@Html.DisplayNameFor(m => m.Invoices!.Cliente_Id)</th>
                                        <th>@Html.DisplayNameFor(m => m.Invoices!.Fecha)</th>
                                        <th>@Html.DisplayNameFor(m => m.Invoices!.Moneda_Id)</th>
                                        <th>@Html.DisplayNameFor(m => m.Cantidad)</th>
                                        <th>@Html.DisplayNameFor(m => m.Precio)</th>
                                        <th>@Html.DisplayNameFor(m => m.Total_ventas)</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr class="sale-row-@item.DetalleFactura_Id">
                                            <td>@item.Factura_Id</td>
                                            <td class="productimgname">
                                                @if (!string.IsNullOrEmpty(item.Products!.Image))
                                                {
                                                    <a class="product-img">
                                                        <img src="@item.Products.Image" alt="product">
                                                    </a>
                                                }
                                                <a>@item.Products.Descripcion</a>
                                            </td>
                                            <td data-cliente-id="@item.Invoices!.Clients!.Cliente_Id">
                                                @item.Invoices.Clients!.Nombre
                                                @item.Invoices.Clients.Apellido
                                            </td>
                                            <td>@item.Invoices.Fecha</td>
                                            <td>@item.Invoices.Currencies!.Tipo</td>
                                            <td>@item.Cantidad</td>
                                            <td>@item.Precio</td>
                                            <td>@item.Total_ventas</td>
                                            <td>
                                                <a class="me-3">
                                                    <img class="edit-icon" src="~/img/icons/edit.svg" alt="img">
                                                </a>
                                                @if (rol == "Administrador")
                                                {
                                                    <a class="confirm-text delete-Sale" data-sale-id="@item.DetalleFactura_Id">
                                                    <img src="~/img/icons/delete.svg" alt="img">
                                                    </a>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <p>No hay Registros</p>
                    }
                }
            </div>

            <form asp-action="Editsales" method="post">
                <div class="row">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" name="Producto_Id" class="producto-input" />
                    <input type="hidden" name="Factura_Id" value="@ViewBag.Factura_Id" />
                    <input type="hidden" name="Detalle_Factura" class="codigo-input" />
                    <input type="hidden" name="Usuario_Id" class="user-input" value="@ViewData["userId"]" />
                    <input type="hidden" id="userRole" value="@rol" />


                    <div class="col-lg-3 col-sm-6 col-12">
                        <div class="form-group">
                            <label>Producto</label>
                            <select class="select producto-select" asp-items="ViewBag.Productos"></select>
                            <span class="text-danger"></span>
                        </div>
                    </div>
                    <input type="hidden" name="Invoices.Cliente_Id" class="cliente-input" />
                    <div class="col-lg-3 col-sm-6 col-12">
                        <div class="form-group">
                            <label>Fecha de edición</label>
                            <div class="input-groupicon">
                                <input type="text" name="Invoices.Fecha" placeholder="DD-MM-YYYY" class="datetimepicker fecha-input" readonly>
                                <div class="addonset">
                                    <img src="~/img/icons/calendars.svg" alt="img">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-sm-6 col-12">
                        <div class="form-group">
                            <label>Moneda</label>
                            <input type="text" name="Invoices.Moneda_Id" class="moneda-input" placeholder="Tipo de moneda" readonly/>
                            <span class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-lg-3 col-sm-6 col-12">
                        <div class="form-group">
                            <label>Cantidad</label>
                            <input type="text" name="Cantidad" class="cantidad-input" placeholder="0"/>
                            <span class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="row">
                        <div class="col-lg-6 ">
                            <div class="total-order w-100 max-widthauto m-auto mb-4">
                            </div>
                        </div>
                        <div class="col-lg-6 ">
                            <div class="total-order w-100 max-widthauto m-auto mb-4">
                                <input type="hidden" name="Precio" id="precio-input" onkeypress="return SoloNumeros(event);" required />
                                <input type="hidden" name="Total_ventas" id="total-input" readonly />
                                <input type="hidden" name="Invoices.Monto_final" class="monto-final-input" id="monto-final-input" readonly />
                                <ul>
                                    <li>
                                        <h4>Precio</h4>
                                        <h5 class="precio-input">0</h5>
                                    </li>
                                    <li class="total">
                                        <h4>Total</h4>
                                        <h5 class="total-h5">0.00</h5>
                                    </li>
                                    <li class="total">
                                        <h4>Monto Final de venta</h4>
                                        <h5 class="monto-final-h5">0</h5>
                                    </li>
                                    <!--<li>
                                        <h4></h4>
                                        <h5></h5>
                                        <button type="button" class="btn btn-danger">Calcular</button>
                                    </li>-->
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <button type="submit" class="btn btn-submit me-2">
                            Actualizar
                        </button>
                        <a asp-controller="Sales" asp-action="Saleslist" class="btn btn-cancel">Cancel</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
@{
    var url = Url.Action("ObtenerMontoFinal", "Sales");
}
@section scripts {
    <script src="~/js/validations.js"></script>
    <!--Get items-->
    <script>
        var cantidadOriginal = 0;
        var totalOriginal = 0;
        var montoFinalOriginal = 0;
        //var totalCero = 0;
        $(document).ready(function () {
            function getFormattedDate() {
                var date = new Date();
                var year = date.getFullYear();
                var month = ("0" + (date.getMonth() + 1)).slice(-2);
                var day = ("0" + date.getDate()).slice(-2);
                var hours = ("0" + date.getHours()).slice(-2);
                var minutes = ("0" + date.getMinutes()).slice(-2);
                var seconds = ("0" + date.getSeconds()).slice(-2);

                return year + "-" + month + "-" + day + " " + hours + ":" + minutes + ":" + seconds;
            }

            // Cuando se hace clic en el icono de editar...
            $(document).on('click', '.edit-icon', function () {
                // Obtén los datos de la fila
                var codigo = $(this).closest('tr').find('td:eq(0)').text();
                var producto = $(this).closest('tr').find('td:eq(1)').text();
                var clienteId = $(this).closest('tr').find('td[data-cliente-id]').data('cliente-id');
                var fecha = $(this).closest('tr').find('td:eq(3)').text();
                var moneda = $(this).closest('tr').find('td:eq(4)').text();
                var cantidad = $(this).closest('tr').find('td:eq(5)').text();
                var precio = $(this).closest('tr').find('td:eq(6)').text();
                var total = $(this).closest('tr').find('td:eq(7)').text();

                var montoFinal = parseFloat(ObtenerMontoFinalFactura(codigo));

                // Establecer los valores en los elementos de la interfaz de usuario
                $('.codigo-input').val(codigo);
                $('.cliente-input').val(clienteId);
                var formattedDate = getFormattedDate();
                $('.fecha-input').val(formattedDate);
                $('.moneda-input').val(moneda);
                $('.cantidad-input').val(cantidad);
                $('.precio-input').text(precio);
                $('.total-h5').text(total);
                if (moneda === 'Dolar') {
                    $('.monto-final-h5').text('U$ ' + montoFinal.toFixed(2));
                } else {
                    $('.monto-final-h5').text('C$ ' + montoFinal.toFixed(2));
                }
                cantidadOriginal = cantidad;
                totalOriginal = total;

                montoFinalOriginal = montoFinal;

                $('.producto-select').val($('.producto-select option').filter(function () {
                    return $(this).text().trim() === producto.trim();
                }).val()).trigger('change'); // Dispara el evento change para actualizar el selector visual
            });
        });

        // Función para obtener el monto final de la factura desde el servidor
        function ObtenerMontoFinalFactura(facturaId) {
            var montoFinal = 0;
            var url = '@url';
            $.ajax({
                url: url,
                type: 'GET',
                data: { id: facturaId },
                async: false, // Hacer la solicitud síncrona para que la función espere la respuesta
                success: function (data) {
                    montoFinal = data; // Establecer el monto final con el valor recibido del servidor
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log('Error al obtener el monto final de la factura:', errorThrown);
                }
            });
            return montoFinal;
        }
    </script>
    <!--Get price by product, calculations and form-->
    <script>
        function limpiarCampos() {
            // Limpiar los inputs y select
            $('.fecha-input').val('');
            $('.precio-input').val('');
            $('.precio-input').text('0');
            $('.codigo-input').val('');
            $('.cantidad-input').val('');
            $('.total-h5').text('C$ 0.00');
            $('input[name="Precio_Unitario"]').val('');
            $('input[name="monto-final"]').val('');
            $('input[name="Total_ventas"]').val('');
            $('.monto-final-h5').text('C$ 0.00');

            // Reiniciar los select a su valor inicial
            $('.producto-select').val($('.producto-select option:first').val()).trigger('change');
            //$('.moneda-select').val($('.moneda-select option:first').val()).trigger('change');
        }

        $(document).ready(function () {
            var precioOriginal;
            // Manejar el cambio en el select de producto
            $('.producto-select').on('change', function () {
                var saleId = $(this).val();
                $('.producto-input').val(saleId);
                // Realizar una llamada AJAX para obtener el precio del producto seleccionado
                $.ajax({
                    url: '@Url.Action("GetProductPrice", "Sales")',
                    type: 'GET',
                    data: { productId: saleId },
                    success: function (price) {
                        // Almacenar el precio original
                        precioOriginal = price;

                        // Actualizar el precio y el total
                        actualizarPrecioYTotal();
                    },
                    error: function () {
                        // Manejar el error si no se puede obtener el precio
                        alert('No se pudo obtener el precio del producto.');
                    }
                });
            });

            $('.cantidad-input').on('input', actualizarPrecioYTotal);

            /*$('.btn-danger').on('click', function () {
                var totalFinal = 0;
                var montoFinalCompleto = 0;
                var montoFinal = 0;
                //var montoCero = 0;
                var cantidadInput = $('.cantidad-input').val().trim(); // Obtener el valor y eliminar los espacios en blanco
                var cantidad = cantidadInput !== '' ? parseInt(cantidadInput) : 0; // Convertir a entero si no está vacío, de lo contrario, establecer en 0
                //if (productoOriginal != producto) {
                //console.log("Otro: "+ productoOriginal, producto);
                var totalinput = $('input[name="Total_ventas"]').val();
                var total = parseFloat(totalinput);
                var montoFinalText = $('.monto-final-h5').text(); // Obtener el texto del elemento
                montoFinal = parseFloat(montoFinalText.replace(/[^0-9.-]+/g, "")); // Eliminar el símbolo de moneda y convertir a float
                //montoCero = Math.abs(totalOriginal - montoFinalOriginal);
                var moneda = $('.moneda-select').find('option:selected').text();
                if (totalCero == 0) { totalFinal = 0; totalCero = 1; }
                else { totalFinal = Math.abs(totalOriginal - total); }
                console.log("Obtener final");
                console.log("totalFinal " + totalFinal + " = Math.abs(totalOriginal {" + totalOriginal + "}  - {" + total + "} total;");
                //if (totalOriginal != total) {
                //console.log(totalFinal, totalOriginal, total);
                if (moneda === 'Dolar') {
                    // Multiplicar el precio por el factor de conversión (36 en este caso)
                    montoFinal /= 36.00;
                    if (cantidadOriginal <= cantidad) { montoFinalCompleto = totalFinal + montoFinal; }
                    else { montoFinalCompleto = Math.abs(totalFinal - montoFinal); }
                    $('.monto-final-h5').text('$ ' + totalFinal.toFixed(2));
                } else {
                    if (cantidadOriginal <= cantidad) {
                        console.log("Si la cantidadOriginal{" + cantidadOriginal + "} es menor o igual a la cantidad {" + cantidad + "}");
                        if (totalFinal == 0) {
                            console.log("Si totalfinal es 0");
                            montoFinalCompleto = montoFinalOriginal;
                            console.log("montoFinalCompleto {" + montoFinalCompleto + " } =  montoFinalOriginal {" + montoFinalOriginal + "}");
                        }
                        else {
                            console.log("Si totalfinal no es 0");
                            montoFinalCompleto = totalFinal + montoFinal;
                            console.log("montoFinalCompleto {" + montoFinalCompleto + " } =  totalFinal {" + totalFinal + "} +  montoFinal {" + montoFinal + "}");
                        }
                    }
                    else if (cantidad == 0) {
                        console.log("Si la cantidad{" + cantidad + "} es 0 ");
                        montoFinalCompleto = Math.abs(totalOriginal - montoFinalOriginal);
                        console.log("montoFinalCompleto {" + montoFinalCompleto + " } =  totalOriginal {" + totalOriginal + "} +  montoFinalOriginal {" + montoFinalOriginal + "}");
                    }
                    else {
                        console.log("Si la cantidadOriginal{" + cantidadOriginal + "} es mayor a cantidad {" + cantidad + "}");
                        montoFinalCompleto = Math.abs(totalFinal - montoFinal);
                        console.log("montoFinalCompleto {" + montoFinalCompleto + "} = Math.abs(totalFinal {" + totalFinal + "}  - {" + montoFinal + "} montoFinal);");
                    }
                    $('.monto-final-h5').text('C$ ' + montoFinalCompleto.toFixed(2)); // Actualizar el total mostrado en la interfaz de usuario
                }
                $('input[name="Invoices.Monto_final"]').val(montoFinalCompleto.toFixed(2)); // Actualizar el campo Monto_final en el formulario
                //}
                //}
            });
            */
            function actualizarPrecioYTotal() {
                var Total_Venta = 0;
                var moneda = $('input[name="Invoices.Moneda_Id"]').val();
                // Obtener la cantidad actual
                var cantidadInput = $('.cantidad-input').val().trim();
                var cantidad = cantidadInput !== '' ? parseInt(cantidadInput) : 0; // Convertir a entero si no está vacío, de lo contrario, establecer en 0
                //var precio = parseFloat($('input[name="Precio"]').val());
                var precio = precioOriginal;
                if (moneda === 'Dolar') {
                    // Multiplicar el precio por el factor de conversión (36 en este caso)
                    precio /= 36.00;
                    // Redondear el precio a 2 decimales
                    precio = precio.toFixed(2);

                    // Actualizar el precio en el formulario
                    $('.precio-input').text(precio);
                    $('input[name="Precio"]').val(precio);
                    // Verificar si la cantidad está vacía y establecer el total en 0 en ese caso
                    if (cantidadInput === '') {
                        $('.total-h5').text("U$ 0.00");
                        //var total = totalOriginal;
                        Total_Venta = montoFinalOriginal;
                    } 
                    else {
                        var total = cantidad * precio;
                        var totalFinal = Math.abs(totalOriginal - total);
                        if (totalOriginal > total) { Total_Venta = montoFinalOriginal - totalFinal; }
                        else if (totalOriginal < total) { Total_Venta = montoFinalOriginal + totalFinal; }
                        else { Total_Venta = montoFinalOriginal; }
                    }
                    $('.total-h5').text('U$ ' + total.toFixed(2));
                    $('input[name="Total_ventas"]').val(total.toFixed(2));
                    $('.monto-final-h5').text('U$ ' + Total_Venta.toFixed(2));
                    $('.monto-final-input').val(Total_Venta.toFixed(2));

                } else {
                    // Redondear el precio a 2 decimales
                    precio = precio.toFixed(2);

                    // Actualizar el precio en el formulario
                    $('.precio-input').text(precio);
                    $('input[name="Precio"]').val(precio);
                    // Verificar si la cantidad está vacía y establecer el total en 0 en ese caso
                    if (cantidadInput === '') {
                        $('.total-h5').text("C$ 0.00");
                        //var total = totalOriginal;
                        Total_Venta = montoFinalOriginal;
                    }
                    else {
                        var total = cantidad * precio;
                        var totalFinal = Math.abs(totalOriginal - total);
                        if (totalOriginal > total) { Total_Venta = montoFinalOriginal - totalFinal; }
                        else if (totalOriginal < total) { Total_Venta = montoFinalOriginal + totalFinal; }
                        else { Total_Venta = montoFinalOriginal; }
                    }
                    $('.total-h5').text('C$ ' + total.toFixed(2));
                    $('input[name="Total_ventas"]').val(total.toFixed(2));
                    $('.monto-final-h5').text('C$ ' + Total_Venta.toFixed(2));
                    $('.monto-final-input').val(Total_Venta.toFixed(2));
                }
            }

            var saleId = '@ViewBag.Factura_Id';
            $("form").submit(function (event) {
                event.preventDefault(); // Evita el envío del formulario por defecto

                var formData = $(this).serialize(); // Obtén los datos del formulario

                $.ajax({
                    url: $(this).attr("action"),
                    type: $(this).attr("method"),
                    contentType: "application/x-www-form-urlencoded",
                    data: formData, // Datos del formulario
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: "Compra actualizada",
                                text: response.message,
                                icon: "success",
                                confirmButtonColor: "#3085d6",
                                confirmButtonText: "OK"
                            }).then((result) => {
                                // Obtener los datos actualizados cuando el usuario cierre el mensaje
                                if (result.isConfirmed) {
                                    $.ajax({
                                        url: '@Url.Action("GetSaleDetails", "Sales")',
                                        type: 'GET',
                                        data: { id: saleId },
                                        success: function (response) {
                                            $('table tbody').empty();
                                            $.each(response.$values, function (i, item) {
                                                var editIcon = '<a class="me-3"><img class="edit-icon" src="/img/icons/edit.svg" alt="img"></a>';
                                                //var deleteIcon = '<a class="confirm-text delete-Sale" data-sale-id=' + item.detalleFactura_Id + '><img src="/img/icons/delete.svg" alt="img"></a>';
                                                var userRole = $('#userRole').val();
                                                var deleteIcon = '';

                                                if (userRole == 'Administrador') {
                                                    deleteIcon = '<a class="confirm-text delete-Sale" data-sale-id=' + item.detalleFactura_Id + '><img src="/img/icons/delete.svg" alt="img"></a>';
                                                }
                                                var productImg = '';
                                                if (item.image) {
                                                    productImg = '<a class="product-img"><img src="' + item.image + '" alt="product"></a>';
                                                }

                                                $('table tbody').append(
                                                    '<tr class="sale-row-'+ item.detalleFactura_Id +'"><td>' + item.factura_Id +
                                                    '</td><td class="productimgname">' + productImg +
                                                    '<a>' + item.producto_Descripcion + '</a>' +
                                                    '</td><td data-cliente-id="' + item.cliente_Id + '">' +
                                                    item.cliente_nombre + ' ' + item.cliente_apellido +
                                                    '</td><td>' + item.fecha +
                                                    '</td><td>' + item.moneda +
                                                    '</td><td>' + item.cantidad +
                                                    '</td><td>' + item.precio +
                                                    '</td><td>' + item.total +
                                                    '</td><td>' + editIcon + deleteIcon +
                                                    '</td></tr>');
                                            });
                                            limpiarCampos();
                                        }
                                    });
                                }
                            });
                        } else {
                            Swal.fire({
                                title: "Error",
                                text: response.message,
                                icon: "error",
                                confirmButtonColor: "#d33",
                                confirmButtonText: "OK"
                            });
                            limpiarCampos(); // Limpiar campos en caso de error
                        }
                    },
                    error: function () {
                        // Si hubo un error en la petición Ajax, muestra un mensaje de error
                        Swal.fire({
                            title: "Error",
                            text: "Se produjo un error al procesar la solicitud.",
                            icon: "error",
                            confirmButtonColor: "#d33",
                            confirmButtonText: "OK"
                        });
                        limpiarCampos(); // Limpiar campos en caso de error
                    }
                });            
            });
        });
    </script>
    <!--Eliminate-->
    <script>
        $(document).ready(function () {
            $(document).on("click", ".delete-Sale", function () {
                var saleId = $(this).data("sale-id");
                Swal.fire({
                    title: "¿Estás seguro?",
                    text: "¡No podrás revertir esto!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Sí, eliminarlo",
                    cancelButtonText: "Cancelar"
                }).then((result) => {
                    if (result.isConfirmed) {
                        eliminarProducto(saleId);
                    }
                });
            });
        });

        function eliminarProducto(saleId) {
            var token = $('input[name="__RequestVerificationToken"]').val();
            $.ajax({
                url: '/Sales/DeleteConfirmed',
                type: 'POST',
                data: {
                    id: saleId,
                    __RequestVerificationToken: token
                },
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            title: "¡Eliminación exitosa!",
                            text: response.message,
                            icon: "success",
                            confirmButtonColor: "#3085d6",
                            confirmButtonText: "Ok",
                        }).then((result) => {
                            $(".sale-row-" + saleId).remove();
                            if ($('table tbody tr').length == 0) {
                                window.location.href = "/Sales/Saleslist";
                            }
                            limpiarCampos();
                        });
                    }
                    else {
                        Swal.fire({
                            title: "Error",
                            text: response.message,
                            icon: "error",
                            confirmButtonColor: "#d33",
                            confirmButtonText: "OK"
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.log(xhr, status, error);
                }
            });
        }
    </script>

    <script>
        /*Acá pueden implementar su lógica, solo necesitan este archivo*/
        function SoloNumeros(event) {
            var keynum;

            if (window.event) {
                keynum = event.keyCode;
            }
            else {
                keynum = event.which;
            }

            if ((keynum > 47 && keynum < 58) || (keynum == 8) || (keynum == 13)) {
                return true;
            }
            else {
                Swal.fire({
                    title: "Error",
                    text: 'Solo puede ingresar números',
                    icon: "warning",
                    confirmButtonColor: "#d33",
                    confirmButtonText: "OK"
                });
                return false;
            }
        }
    </script>
}
