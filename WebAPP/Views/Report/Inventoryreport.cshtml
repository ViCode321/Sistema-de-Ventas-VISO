@model IEnumerable<project_DBA_VISO.Models.Product>
@{
    ViewData["Title"] = "Inventory Report";
}

<div class="content">
    <div class="page-header">
        <div class="page-title">
            <h4>Reporte de Inventario</h4>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="table-top">
                <div class="search-set">
                    <div class="search-input">
                        <a class="btn btn-searchset"><img src="~/img/icons/search-white.svg" alt="img"></a>
                    </div>
                </div>
            </div>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <!--Table-->
                <div class="table-responsive">
                    <!--Cambio de mayor a menor-->
                    @if (Model.Count() < 0)
                    {
                    <table class="table datanew">
                            <thead>
                                <tr>
                                    <th>@Html.DisplayNameFor(m => m.Producto_Id)</th>
                                    <th>@Html.DisplayNameFor(m => m.Descripcion)</th>
                                    <th>@Html.DisplayNameFor(m => m.Proveedor_Id)</th>
                                    <th>@Html.DisplayNameFor(m => m.Categoria_Id)</th>
                                    <th>@Html.DisplayNameFor(m => m.Marca_Id)</th>
                                    <th>@Html.DisplayNameFor(m => m.Cantidad)</th>
                                    <th>@Html.DisplayNameFor(m => m.Costo)</th>
                                    <th>@Html.DisplayNameFor(m => m.Precio)</th>
                                    <th>@Html.DisplayNameFor(m => m.Status)</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(m => item.Producto_Id)</td>
                                        <td class="productimgname">
                                            @if (!string.IsNullOrEmpty(item.Image))
                                            {
                                                <a class="product-img">
                                                    <img src="@item.Image" alt="product">
                                                </a>
                                            }
                                            <a>@Html.DisplayFor(m => item.Descripcion)</a>
                                        </td>
                                        @if (item.Suppliers != null && item.Suppliers.Status)
                                        {
                                            <td>@Html.DisplayFor(m => item.Suppliers.Nombre)</td>
                                        }
                                        else
                                        {
                                            <td>
                                                <span class="badges bg-lightred">N/A</span>
                                            </td>
                                        }
                                        @if (item.Categories != null && item.Categories.Status)
                                        {
                                            <td>@Html.DisplayFor(m => item.Categories.Nombre)</td>
                                        }
                                        else
                                        {
                                            <td>
                                                <span class="badges bg-lightred">N/A</span>
                                            </td>
                                        }
                                        @if (item.Brands != null && item.Brands.Status)
                                        {
                                            <td>@Html.DisplayFor(m => item.Brands.Nombre)</td>
                                        }
                                        else
                                        {
                                            <td>
                                                <span class="badges bg-lightred">N/A</span>
                                            </td>
                                        }
                                        <td>@Html.DisplayFor(m => item.Cantidad)</td>
                                        <td>@Html.DisplayFor(m => item.Costo)</td>
                                        <td>@Html.DisplayFor(m => item.Precio)</td>
                                        @if (item.Status)
                                        {
                                            <td>
                                                <span class="badges bg-lightgreen">Activo</span>
                                        </td>
                                        }
                                        else
                                        {
                                            <td>
                                                <span class="badges bg-lightred">Inactivo</span>
                                            </td>

                                        }
                                    </tr>
                                }
                            </tbody>

                        </table>
                    }
                    else
                    {
                        <p class="text-center">No hay Registros</p>
                    }
                </div>
            }
        </div>
    </div>
    <div class="row justify-content-center">
        <div class="col-lg-12 col-sm-12 col-12 d-flex">
            <div class="card flex-fill">
                <div class="card-header">
                    <h5 class="card-title">Productos más vendidos</h5>
                </div>
                <div class="card-body d-flex justify-content-center">
                    <!--<div id="donut-chart" class="chart-set"></div>-->
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        var topProductosData = @Html.Raw(Json.Serialize(ViewBag.TopProductos));
        var topProductos = topProductosData.$values || topProductosData;

        var lightOptions = {
            series: topProductos.map(x => x.cantidadVendida),
            chart: {
                width: 580,
                type: 'pie',
            },
            labels: topProductos.map(x => x.producto),
            legend: {
                labels: {
                    colors: '#000000'
                }
            },
            responsive: [{
                breakpoint: 480,
                options: {
                    chart: {
                        width: 250
                    },
                    legend: {
                        position: 'bottom',
                        labels: {
                            colors: '#000000'
                        }
                    }
                }
            }]
        };

        var darkOptions = {
            series: topProductos.map(x => x.cantidadVendida),
            chart: {
                width: 580,
                type: 'pie',
            },
            labels: topProductos.map(x => x.producto),
            legend: {
                labels: {
                    colors: '#FFFFFF'
                }
            },
            responsive: [{
                breakpoint: 250,
                options: {
                    chart: {
                        width: 200
                    },
                    legend: {
                        position: 'bottom',
                        labels: {
                            colors: '#FFFFFF'
                        }
                    }
                }
            }]
        };

        var chart = new ApexCharts(document.querySelector("#donut-chart"), lightOptions);
        chart.render();

        function updateChartTheme() {
            var theme = document.body.getAttribute('data-theme');
            if (theme === 'dark') {
                chart.updateOptions(darkOptions);
            } else {
                chart.updateOptions(lightOptions);
            }
        }

        var observer = new MutationObserver(function (mutations) {
            mutations.forEach(function (mutation) {
                if (mutation.attributeName === 'data-theme') {
                    updateChartTheme();
                }
            });
        });

        observer.observe(document.body, { attributes: true });

        updateChartTheme();
    </script>
}
